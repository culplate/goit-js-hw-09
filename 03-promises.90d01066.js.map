{"mappings":"YAAA,IAeuBA,EAAUC,EACzBC,EAhBKC,SAASC,cAAc,SACrBD,SAASC,cAAc,6BAE/BC,iBAAiB,SAIwB,SAA1BC,EAAQC,GAC5BA,EAAMC,iBAEEF,C,IAKaN,EAiBT,EAjBmBC,EAiBhB,IAhBTC,EAAgBO,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLZ,EACFU,EAAQ,uBAAwCG,OAAff,EAAS,QAAYe,OAANd,EAAM,OAEpDY,EAAK,sBAAqCE,OAAff,EAAS,QAAYe,OAANd,EAAM,M,GAEnDA,EAAQD,E,IAIVgB,MAAK,SAAAC,G,OAAQC,QAAQC,IAAIF,E,IACzBG,OAAM,SAAAC,G,OAAOH,QAAQC,IAAIE,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst subBtn = document.querySelector('.form button[type=submit]');\n\nsubBtn.addEventListener('click', handleSubmit)\n\n// реалізувати кількість викликів функціі через рекурсію\n\nfunction handleSubmit(amount, event) {\n  event.preventDefault();\n  let n = 1;  // this should be connected with \"position\" in createPromise\n  if (n = amount) {\n\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay * position)\n  });\n\n  promise\n    .then(mess => console.log(mess))\n    .catch(err => console.log(err))\n}\n\ncreatePromise(1, 1000);\n"],"names":["position","delay","shouldResolve","document","querySelector","addEventListener","amount","event","preventDefault","Math","random","Promise","resolve","reject","setTimeout","concat","then","mess","console","log","catch","err"],"version":3,"file":"03-promises.90d01066.js.map"}