{"mappings":"AAAaA,SAASC,cAAc,SACrBD,SAASC,cAAc,6BAE/BC,iBAAiB,SAIwB,SAA1BC,EAAQC,GAC5BA,EAAMC,iBACN,IAAIC,EAAI,EACJA,EAAIH,C,IAKV,SAAuBI,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAQD,EAAS,IAInBS,MAAKC,GAAQC,QAAQC,IAAIF,KACzBG,OAAMC,GAAOH,QAAQC,IAAIE,I,CAG9BC,CAAc,EAAG","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst subBtn = document.querySelector('.form button[type=submit]');\n\nsubBtn.addEventListener('click', handleSubmit)\n\n// реалізувати кількість викликів функціі через рекурсію\n\nfunction handleSubmit(amount, event) {\n  event.preventDefault();\n  let n = 1;  // this should be connected with \"position\" in createPromise\n  if (n = amount) {\n\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay * position)\n  });\n\n  promise\n    .then(mess => console.log(mess))\n    .catch(err => console.log(err))\n}\n\ncreatePromise(1, 1000);\n"],"names":["document","querySelector","addEventListener","amount","event","preventDefault","n","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","mess","console","log","catch","err","$47d4ff9957288465$var$createPromise"],"version":3,"file":"03-promises.0413874f.js.map"}